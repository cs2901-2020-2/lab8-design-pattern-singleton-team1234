ê
java.lang.ObjectJ
equals(Ljava/lang/Object;),java.lang.Object#equals(Ljava/lang/Object;)Z*

finalize()java.lang.Object#finalize()V&
notify()java.lang.Object#notify()V&
<init>()java.lang.Object#<init>()V;

toString()-java.lang.Object#toString()Ljava/lang/String;$
wait(J)java.lang.Object#wait(J)V&
wait(JI)java.lang.Object#wait(JI)V:

getClass(),java.lang.Object#getClass()Ljava/lang/Class;5
clone()*java.lang.Object#clone()Ljava/lang/Object;8
registerNatives()#java.lang.Object#registerNatives()V,
notifyAll()java.lang.Object#notifyAll()V"
wait()java.lang.Object#wait()V*

hashCode()java.lang.Object#hashCode()I•
lab.ChocolateBoilerjava.lang.Object+
	isEmpty()lab.ChocolateBoiler#isEmpty()Z)
<init>()lab.ChocolateBoiler#<init>()V-

isBoiled()lab.ChocolateBoiler#isBoiled()Z'
drain()lab.ChocolateBoiler#drain()V%
boil()lab.ChocolateBoiler#boil()V%
fill()lab.ChocolateBoiler#fill()Vˇ
lab.ChocolateBoilerSingletonjava.lang.Object4
	isEmpty()'lab.ChocolateBoilerSingleton#isEmpty()Z2
<init>()&lab.ChocolateBoilerSingleton#<init>()V6

isBoiled()(lab.ChocolateBoilerSingleton#isBoiled()Z0
drain()%lab.ChocolateBoilerSingleton#drain()VY
getInstance()Hlab.ChocolateBoilerSingleton#getInstance()Llab/ChocolateBoilerSingleton;.
boil()$lab.ChocolateBoilerSingleton#boil()V.
fill()$lab.ChocolateBoilerSingleton#fill()V>
increaseSema(),lab.ChocolateBoilerSingleton#increaseSema()I